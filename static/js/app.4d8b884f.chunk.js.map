{"version":3,"sources":["screens/MenuScreen.js","firebase.js","screens/ChatScreen.js","screens/ExportToExcel.js","screens/HistoryScreen.js","App.js","assets/Pepsi-Logo.png"],"names":["MenuScreen","navigation","View","style","container","Image","source","require","resizeMode","logo1","containerrow","flexDirection","Button","title","button","color","onPress","navigate","width","height","StyleSheet","create","marginTop","flex","backgroundColor","alignItems","padding","db","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firestore","storage","auth","ChatScreen","unsubFromMessagesRef","React","useRef","useState","messages","setMessages","titleText","setTitleText","shopCodeText","setShopCodeText","setShopNameText","chatText","setChatText","menuText","setMenuText","count","setCount","searchchat","setSearchchat","shopCode","chatName","menuChat","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","getUser","a","async","Data","fetch","method","body","JSON","stringify","response","json","onPressTitle","shopname","shopcode","chatname","menu","console","error","searchFilterFunction","text","newData","filter","item","itemData","toUpperCase","textData","indexOf","updateChat","getchatText","status","Message","alert","insertChatLog","getmenuChat","useEffect","countTimer","setInterval","manageTimer","clearInterval","selectChatLog","selectChatLogL","collection","where","get","then","querySnapshot","forEach","doc","ref","update","received","submitsearch","getsearchchat","onSend","useCallback","_id","createdAt","user","add","current","readUser","getshopcode","getchatName","unsubFromMessages","orderBy","onSnapshot","snapshot","docs","map","data","toDate","image","video","images","setImages","videos","setVideos","setUrls","setProgress","uploadImagePicked","geturls","msg","Math","random","toString","substring","Date","name","avatar","uploadVideosPicked","styles","lightTheme","round","searchIcon","size","onChangeText","onClear","placeholder","value","gap","SectionList","ItemSeparatorComponent","listItemSeparatorStyle","sections","renderItem","marginLeft","uri","displayimage","Img","Text","sectionListItemStyle","updateChatLog","textAlign","chatcolor","fontSize","borderRadius","chatcount","keyExtractor","index","window","confirm","showAvatarForEveryMessage","renderBubble","props","tickStyle","currentMessage","timeTextStyle","right","left","textStyle","wrapperStyle","quickReplyStyle","borderWidth","renderMessageVideo","position","Video","useNativeControls","shouldPlay","type","id","hidden","onChange","e","i","newImage","target","files","prevState","accept","for","onClick","date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","filename","promises","uploadTask","put","push","on","progress","bytesTransferred","totalBytes","log","child","getDownloadURL","urls","namechats","justifyContent","notiText","marginRight","buttonchat","scroll","marginHorizontal","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","HistoryScreen","modalVisible","setModalVisible","shopDisplayImage","setShopDisplayImage","shopTellText","setShopTellText","shopAddressText","setShopAddressText","setShopChatNameText","setShopMenu","filteredDataSource1","setFilteredDataSource1","masterDataSource1","setMasterDataSource1","filteredDataSource2","setFilteredDataSource2","masterDataSource2","setMasterDataSource2","filteredDataSource3","setFilteredDataSource3","masterDataSource3","setMasterDataSource3","filteredDataSource4","setFilteredDataSource4","masterDataSource4","setMasterDataSource4","filteredDataSource5","setFilteredDataSource5","masterDataSource5","setMasterDataSource5","filteredDataSource6","setFilteredDataSource6","masterDataSource6","setMasterDataSource6","setData","tell","address","getTable","axios","r","newData1","newData2","newData3","newData4","newData5","newData6","onPressChat","unsubscribe","username","dataTable","setDataTable","test2","groupname","renderSectionHeader","section","groupText","Modal","animationType","transparent","visible","onRequestClose","Alert","centeredView","modalView","renderInputToolbar","Pressable","buttonClose","Img2","marginBottom","DataTable","Header","Title","FlatList","Row","Cell","num","dateinsert","IconButton","icon","container2","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","fontWeight","modalText","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerTitleAlign","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.4d8b884f.chunk.js","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Image, Button } from 'react-native'\n\nconst MenuScreen = ({ navigation }) => {\n\n    return (\n\n        <View style={style.container}>\n            <Image\n                source={require(\"../assets/Pepsi-Logo.png\")}\n                resizeMode=\"contain\"\n                style={style.logo1}\n            ></Image>\n\n            <View style={[style.containerrow, {\n\n                flexDirection: \"row\"\n            }]}>\n\n\n                <Button title=\"Live Chat\" style={style.button}\n                    color={\"#EE0000\"}\n                    onPress={() => navigation.navigate('Chat')}\n                />\n\n                &nbsp; &nbsp; &nbsp; &nbsp;\n\n\n                <Button title=\"History\" style={style.button}\n                    color={\"#EE0000\"} width='250' height='100'\n                    onPress={() => navigation.navigate('History')}\n                />\n            </View>\n        </View>\n    )\n}\nexport default MenuScreen\nconst style = StyleSheet.create({\n    button: {\n        width: 250,\n        height: 100,\n        marginTop: 20\n    },\n    container: {\n        flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    containerrow: {\n        //  flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    logo1: {\n        height: 150,\n        width: 220\n    },\n\n\n})","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDBCB00CkxHXwiAxqtj369EKv5M5OCgslc\",\n    authDomain: \"pepsi-coolerfan-chat-2d9ab.firebaseapp.com\",\n    databaseURL: \"gs://pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    projectId: \"pepsi-coolerfan-chat-2d9ab\",\n    storageBucket: \"pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    messagingSenderId: \"967346529141\",\n    appId: \"1:967346529141:web:87311021ef0ced75a9e93c\"\n};\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig)\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage};\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { SafeAreaView, ScrollView, SectionList, StyleSheet, Text, View, Image, Button } from 'react-native';\nimport { db, storage } from '../firebase';\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport { SearchBar } from 'react-native-elements';\nimport { Video, Audio } from 'expo-av';\n\nconst ChatScreen = ({ navigation }) => {\n    const unsubFromMessagesRef = React.useRef();\n\n    const [messages, setMessages] = useState([]);\n    const [titleText, setTitleText] = useState(\"\");\n    const [shopCodeText, setShopCodeText] = useState(\"\");\n    const [shopNameText, setShopNameText] = useState(\"\");\n    const [chatText, setChatText] = useState(\"\");\n    const [menuText, setMenuText] = useState(\"\");\n\n    const [count, setCount] = useState(3);\n    const [searchchat, setSearchchat] = useState('unread');\n\n\n    var shopCode = ''\n    var chatName = ''\n    var menuChat = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\n    const [masterDataSource, setMasterDataSource] = useState([]);\n\n    const getUser = async () => {\n        setFilteredDataSource(\"\")\n        setMasterDataSource(\"\")\n        var Data = {\n            searchchat: searchchat,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log_limit.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            //  const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log_limit.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            onPressTitle(json[0].shopname, json[0].shopcode, json[0].chatname, json[0].menu)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            setCount(0)\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData = masterDataSource.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource(newData);\n            setSearch(text);\n        } else {\n            setCount(3)\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource(masterDataSource);\n            setSearch(text);\n        }\n    };\n\n    const updateChat = async (getchatText) => {\n        var Data = {\n            chatname: getchatText,\n            status: 'no'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/close_chat.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            alert(error)\n            console.error(error)\n        }\n    }\n\n    const insertChatLog = async (getchatText, getmenuChat) => {\n        // alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        var Data = {\n            shopcode: 'admin',\n            chatname: getchatText,\n            menu: getmenuChat,\n            status: 'unread'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/insert_chat_log_test.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                //  getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        // selectChatLog()\n        const countTimer = setInterval(() => {\n            manageTimer();\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n\n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        var Data = {\n            searchchat: searchchat,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log_limit.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            //  const response = await fetch('https://school.treesbot.com/pepsichat/select_user_and_log_limit.php')\n            const json = await response.json()\n            setFilteredDataSource(json);\n            setMasterDataSource(json);\n            selectChatLogL()\n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n    }\n\n    const selectChatLogL = async () => {\n        var Data = {\n            shopcode: shopCodeText,\n            chatname: chatText,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n\n            const cityRef = db.collection(chatText).where(\"user._id\", \"==\", shopCodeText)\n                .get()\n                .then(function (querySnapshot) {\n                    querySnapshot.forEach(function (doc) {\n                        doc.ref.update({ received: true })\n                    });\n                })\n\n            setCount(3)\n        } catch (error) {\n            setCount(3)\n            console.error(error)\n        }\n    }\n\n    const submit = async (getchatText) => {\n        const res = window.confirm(\"ยืนยันปิดการสนทนา \" + titleText);\n\n        if (res) {\n            // show your message success\n            updateChat(getchatText)\n        }\n    }\n\n    const submitsearch = async (getsearchchat) => {\n        setCount(0);\n        setSearchchat(getsearchchat);\n        selectChatLog()\n    }\n\n\n    const onSend = useCallback((messages = [], getchatText, getmenuChat) => {\n        //alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        //  alert(\"chatText \" + chatText)\n        insertChatLog(getchatText, getmenuChat)\n        //   setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            received\n        } = messages[0]\n        db.collection(getchatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            received: false\n        })\n\n    }, [])\n\n    const updateChatLog = async (shopname, shopcode, chatname, menu) => {\n        //  alert(shopcode + \" \" + chatname)\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n        onPressTitle(shopname, shopcode, chatname, menu)\n\n    }\n\n    const onPressTitle = (shopname, shopcode, chatname, menu) => {\n        chatName = chatname;\n        shopCode = shopcode;\n        menuChat = menu;\n        let getTitle = shopcode + ' (' + shopname + ')'\n\n        setTitleText(getTitle);\n        setChatText(chatName);\n        setShopCodeText(shopCode);\n        setShopNameText(shopname);\n        setMenuText(menuChat);\n        unsubFromMessagesRef.current && unsubFromMessagesRef.current();\n        readUser(shopcode, chatName)\n    };\n\n    const readUser = async (getshopcode, getchatName) => {\n        const cityRef = db.collection(getchatName).where(\"user._id\", \"==\", getshopcode)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    doc.ref.update({ received: true })\n                });\n            })\n\n        const unsubFromMessages = db.collection(getchatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => {\n            unsubFromMessagesRef.current = unsubFromMessages;\n            setMessages(\n                snapshot.docs.map(doc => ({\n                    _id: doc.data()._id,\n                    createdAt: doc.data().createdAt.toDate(),\n                    text: doc.data().text,\n                    user: doc.data().user,\n                    image: doc.data().image,\n                    video: doc.data().video,\n                    received: doc.data().received\n                }))\n            )\n        });\n\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n    const [images, setImages] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        setImages([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUpload = async () => {\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        const promises = [];\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadImagePicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const uploadImagePicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            image: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n\n    const handleChangevdo = (e) => {\n        setVideos([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setVideos((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUploadvdo = async () => {\n        const promises = [];\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        videos.map((image) => {\n            const uploadTask = storage.ref(`videos/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"videos\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadVideosPicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                />\n            </View>\n        );\n    };\n\n    const uploadVideosPicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            video: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                tickStyle={{\n                    color: props.currentMessage.received ? '#00FF00' : '#454545'\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n\n                }}\n                wrapperStyle={{\n                    right:\n                    {\n                        backgroundColor: 'rgba(0,102,204,1)',\n                        borderRadius: 15\n                    },\n                    left:\n                    {\n                        backgroundColor: 'rgb(255,255,255)',\n                        borderRadius: 15\n                    }\n                }}\n                quickReplyStyle={{\n                    color: 'rgba(0,102,204,1)',\n                    borderWidth: 2,\n                    borderRadius: 30,\n                    backgroundColor: 'rgb(255,255,255)'\n                }}\n\n            />\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"write\" }}>\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        padding: 10,\n                        gap: 5\n                    }}\n                >\n                    <View style={{ flex: 1 }}>\n                        <Button title=\"ยังไม่ได้อ่าน\" style={styles.button}\n                            color={\"#FF0000\"}\n                            onPress={() => submitsearch(\"unread\")}\n                        />\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <Button title=\"อ่านแล้ว\" style={styles.button}\n                            color={\"#006400\"}\n                            onPress={() => submitsearch(\"read\")}\n                        />\n                    </View>\n                </View>\n\n                <SectionList\n                    style={{ height: 100 }}\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { data: filteredDataSource },\n                    ]}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => updateChatLog(item.shopname, item.shopcode, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n                            <Text\n                                style={{\n                                    textAlign: 'center',\n                                    backgroundColor: item.chatcolor,\n                                    fontSize: 10,\n                                    padding: 5,\n                                    marginTop: 5,\n                                    color: '#fff',\n                                    height: 20,\n                                    width: 20,\n                                    borderRadius: 10\n                                }}>\n                                {item.chatcount}\n                            </Text>\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"lightgray\" }} >\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 40,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 3 }}>\n                        <Text style={styles.titleText}>{titleText}</Text>\n                    </View>\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 0.5 }}>\n                        <Button title=\"ปิดการสนทนา\" style={styles.button}\n                            color={\"blue\"}\n                            onPress={() => submit(chatText)}\n                        />\n                    </View>\n                </View>\n                <GiftedChat\n                    messages={messages}\n                    showAvatarForEveryMessage={true}\n                    renderBubble={renderBubble}\n                    renderMessageVideo={renderMessageVideo}\n                    onSend={messages => onSend(messages, chatText, menuChat)}\n                    user={{\n                        _id: 'Admin',\n                        name: 'Admin',\n                        avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                    }}\n                />\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 25,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div>\n                            <input type=\"file\" id=\"upload-file\" hidden onChange={handleChange} accept=\"image/*\" />\n                            <label for=\"upload-file\">เลือกรูปภาพ</label>\n                        </div>\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUpload}>ส่งรูป</button>\n                        </div>\n\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div>\n                            <input type=\"file\" id=\"upload-file-video\" hidden onChange={handleChangevdo} accept=\"video/*\" />\n                            <label for=\"upload-file-video\">เลือกวิดีโอ</label>\n                        </div>\n\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUploadvdo}>ส่งวิดีโอ</button>\n                        </div>\n                    </View>\n                </View>\n\n            </View>\n        </View >\n    )\n}\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    buttonchat: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    scroll: {\n        flex: 1,\n        marginHorizontal: 16\n    },\n});","import React from 'react'\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (apiData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(apiData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <button onClick={(e) => exportToCSV(apiData, fileName)} style={{\n            backgroundColor: \"#145A32\", height: 40, borderRadius: 10, color: \"#ffffff\"\n        }}>Download Excel</button>\n    );\n};","import React, { useEffect, useState } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Alert, Modal, Pressable } from 'react-native';\nimport { db } from '../firebase';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { FlatList } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { DataTable, IconButton } from 'react-native-paper';\nimport { Video, Audio } from 'expo-av';\n\nimport axios from 'axios'\nimport { ExportToExcel } from './ExportToExcel'\n\nconst HistoryScreen = ({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    const [titleText, setTitleText] = useState(\"\")\n    const [shopDisplayImage, setShopDisplayImage] = useState(\"\")\n    const [shopCodeText, setShopCodeText] = useState(\"\")\n    const [shopNameText, setShopNameText] = useState(\"\")\n    const [shopTellText, setShopTellText] = useState(\"\")\n    const [shopAddressText, setShopAddressText] = useState(\"\")\n    const [shopChatNameText, setShopChatNameText] = useState(\"\")\n    const [shopMenu, setShopMenu] = useState(\"\")\n\n    var chatName = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource1, setFilteredDataSource1] = useState([]);\n    const [masterDataSource1, setMasterDataSource1] = useState([]);\n    const [filteredDataSource2, setFilteredDataSource2] = useState([]);\n    const [masterDataSource2, setMasterDataSource2] = useState([]);\n    const [filteredDataSource3, setFilteredDataSource3] = useState([]);\n    const [masterDataSource3, setMasterDataSource3] = useState([]);\n    const [filteredDataSource4, setFilteredDataSource4] = useState([]);\n    const [masterDataSource4, setMasterDataSource4] = useState([]);\n    const [filteredDataSource5, setFilteredDataSource5] = useState([]);\n    const [masterDataSource5, setMasterDataSource5] = useState([]);\n\n    const [filteredDataSource6, setFilteredDataSource6] = useState([]);\n    const [masterDataSource6, setMasterDataSource6] = useState([]);\n\n    const [data, setData] = useState([]);\n    const fileName = \"Export_Chat_Report\"; // here enter filename for your excel file\n\n\n\n\n    const getUser = async (menu) => {\n        var Data = {\n            menu: menu,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_menu.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (menu == 'group1') {\n                setFilteredDataSource1(json);\n                setMasterDataSource1(json);\n                onPressTitle(json[0].displayimage, json[0].shopname, json[0].shopcode, json[0].tell, json[0].address, json[0].chatname, json[0].menu)\n                getTable(json[0].shopcode)\n            } else if (menu == 'group2') {\n                setFilteredDataSource2(json);\n                setMasterDataSource2(json);\n            } else if (menu == 'group3') {\n                setFilteredDataSource3(json);\n                setMasterDataSource3(json);\n            } else if (menu == 'group4') {\n                setFilteredDataSource4(json);\n                setMasterDataSource4(json);\n            } else if (menu == 'group5') {\n                setFilteredDataSource5(json);\n                setMasterDataSource5(json);\n            } else if (menu == '') {\n                setFilteredDataSource6(json);\n                setMasterDataSource6(json);\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        getUser('group1')\n        getUser('group2')\n        getUser('group3')\n        getUser('group4')\n        getUser('group5')\n        getUser('')\n\n        const fetchData = () => {\n            axios.get('https://school.treesbot.com/pepsichat/export_chat_all.php').then(r => setData(r.data))\n        }\n        fetchData()\n    }, [])\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData1 = masterDataSource1.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData2 = masterDataSource2.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData3 = masterDataSource3.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData4 = masterDataSource4.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData5 = masterDataSource5.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData6 = masterDataSource6.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource1(newData1);\n            setFilteredDataSource2(newData2);\n            setFilteredDataSource3(newData3);\n            setFilteredDataSource4(newData4);\n            setFilteredDataSource5(newData5);\n            setFilteredDataSource6(newData6)\n\n            setSearch(text);\n        } else {\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource1(masterDataSource1);\n            setFilteredDataSource2(masterDataSource2);\n            setFilteredDataSource3(masterDataSource3);\n            setFilteredDataSource4(masterDataSource4);\n            setFilteredDataSource5(masterDataSource5);\n            setFilteredDataSource6(masterDataSource6)\n\n            setSearch(text);\n        }\n    };\n\n    const onPressChat = (chatname) => {\n        chatName = chatname\n        setModalVisible(true)\n        readUser()\n    };\n\n    async function readUser() {\n        const unsubscribe = db.collection(chatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video\n\n            }))\n        ))\n        return () => unsubscribe;\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n\n    const onPressTitle = (displayimage, username, shopcode, tell, address, chatname, menu) => {\n        chatName = chatname\n        let getTitle = shopcode + ' (' + username + ')'\n\n        setTitleText(getTitle);\n        setShopDisplayImage(displayimage)\n        setShopNameText(username);\n        setShopCodeText(shopcode);\n        setShopTellText(tell);\n        setShopAddressText(address);\n        setShopChatNameText(chatname);\n        setShopMenu(menu);\n\n        getTable(shopcode);\n    };\n\n    const [dataTable, setDataTable] = useState([]);\n\n    const getTable = async (shopcode) => {\n        var Data = {\n            shopcode: shopcode,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat/select_user_shopcode.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            setDataTable(json);\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const test2 = (menu) => {\n        var groupname = ''\n        if (menu == 'group1') {\n            groupname = 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่'\n        } else if (menu == 'group2') {\n            groupname = 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล'\n        } else if (menu == 'group3') {\n            groupname = 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ'\n        } else if (menu == 'group4') {\n            groupname = 'สอบถามรายละเอียดทั่วไป'\n        } else if (menu == 'group5') {\n            groupname = 'แอด LINE เป๊ปซี่แฟนคลับ'\n        } else if (menu == '') {\n            groupname = 'ไม่ได้เลือกหัวข้อสนทนา'\n        }\n        return groupname\n    }\n    const _renderItem = ({ item }) => (\n        <DataTable.Row>\n            <DataTable.Cell style={{ flex: 1 }}>{item.num}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 2 }}>{item.dateinsert}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 3 }}>{test2(item.menu)}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 1 }}><IconButton\n                icon=\"eye\"\n                color={'blue'}\n                size={20}\n                onPress={() => onPressChat(item.chatname)}\n            />\n            </DataTable.Cell>\n\n        </DataTable.Row>\n    );\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                    style={styles.video}\n                />\n            </View>\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"white\" }}>\n                <ExportToExcel apiData={data} fileName={fileName} />\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    style={{ height: 100 }}\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { title: 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่', data: filteredDataSource1 },\n                        { title: 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล', data: filteredDataSource2 },\n                        { title: 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ', data: filteredDataSource3 },\n                        { title: 'สอบถามรายละเอียดทั่วไป', data: filteredDataSource4 },\n                        { title: 'แอด LINE เป๊ปซี่แฟนคลับ', data: filteredDataSource5 },\n                        { title: 'ไม่ได้เลือกหัวข้อสนทนา', data: filteredDataSource6 },\n\n                    ]}\n                    renderSectionHeader={({ section }) => (\n                        <Text style={styles.groupText}> {section.title} </Text>\n                    )}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => onPressTitle(item.displayimage, item.shopname, item.shopcode, item.tell, item.address, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"#0089FC\" }} >\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        Alert.alert(\"Modal has been closed.\");\n                        setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <GiftedChat\n                                messages={messages}\n                                showAvatarForEveryMessage={true}\n                                renderMessageVideo={renderMessageVideo}\n                                user={{\n                                    _id: 'Admin',\n                                    name: 'Admin',\n                                    avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                                }}\n                                renderInputToolbar={() => { return null }}\n                            />\n                            <Pressable\n                                style={[styles.button, styles.buttonClose]}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>ปิด</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </Modal>\n                <View\n                    style={{\n                        backgroundColor: \"white\",\n                        flexDirection: \"row\",\n                        height: 150,\n                        padding: 0,\n                        borderRadius: 20,\n                        marginTop: 20,\n                        marginLeft: 20,\n                        marginRight: 20\n                    }}\n                >\n                    <View style={{ flex: 1 }}>\n                        <Image\n                            source={{ uri: shopDisplayImage }}\n                            style={styles.Img2}\n                        />\n                    </View>\n                    <View style={{ flex: 2 }}>\n                        <Text style={styles.titleText}><b>{titleText}</b></Text>\n                        <Text style={styles.titleText}>รหัสร้านค้า : {shopCodeText}</Text>\n                        <Text style={styles.titleText}>เบอร์โทรติดต่อ : {shopTellText}</Text>\n                        <Text style={styles.titleText}>ที่อยู่ : {shopAddressText}</Text>\n                    </View>\n                </View>\n                <View style={{\n                    backgroundColor: \"white\",\n                    flexDirection: \"row\",\n                    borderRadius: 20,\n                    marginTop: 10,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    marginBottom: 10\n                }}>\n                    <DataTable>\n                        <DataTable.Header>\n                            <DataTable.Title style={{ flex: 1 }}>No</DataTable.Title>\n                            <DataTable.Title style={{ flex: 2 }}>Date</DataTable.Title>\n                            <DataTable.Title style={{ flex: 3 }}>Message</DataTable.Title>\n                            <DataTable.Title style={{ flex: 1 }}>Action</DataTable.Title>\n\n                        </DataTable.Header>\n\n                        <FlatList data={dataTable} renderItem={_renderItem} />\n                    </DataTable>\n                </View>\n            </View>\n        </View >\n\n    )\n}\nexport default HistoryScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    Img2: {\n        marginTop: 25,\n        marginLeft: 50,\n        height: 100,\n        width: 100,\n        borderRadius: 75\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    container2: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        height: 400,\n        width: 600\n    },\n    groupText: {\n        backgroundColor: 'gray',\n        fontSize: 18,\n        padding: 5,\n        color: 'white',\n    },\n    titleText: {\n        fontSize: 16,\n        padding: 5,\n        color: 'black',\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        flex: 1,\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        width: 500,\n        height: 500,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport MenuScreen from './screens/MenuScreen';\nimport ChatScreen from './screens/ChatScreen';\nimport HistoryScreen from './screens/HistoryScreen';\n\nconst Stack = createStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerTitleAlign: 'center' }}>\n        <Stack.Screen name='Menu' component={MenuScreen} />\n        <Stack.Screen name='Chat' component={ChatScreen} />\n        <Stack.Screen name='History' component={HistoryScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/Pepsi-Logo.32560c85.png\";"],"sourceRoot":""}