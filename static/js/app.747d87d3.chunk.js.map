{"version":3,"sources":["screens/MenuScreen.js","firebase.js","screens/ChatScreen.js","screens/ExportToExcel.js","screens/HistoryScreen.js","screens/NewChatScreen.js","App.js","assets/Pepsi-Logo.png"],"names":["MenuScreen","navigation","View","style","container","Image","source","require","resizeMode","logo1","containerrow","flexDirection","Button","title","button","color","onPress","navigate","width","height","StyleSheet","create","marginTop","flex","backgroundColor","alignItems","padding","db","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","firestore","storage","auth","ChatScreen","unsubFromMessagesRef","React","useRef","useState","messages","setMessages","titleText","setTitleText","shopCodeText","setShopCodeText","setShopNameText","chatText","setChatText","menuText","setMenuText","count","setCount","searchchat","setSearchchat","shopCode","chatName","menuChat","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","getUser","a","async","Data","fetch","method","body","JSON","stringify","response","json","Message","onPressTitle","shopname","shopcode","chatname","menu","console","error","searchFilterFunction","text","newData","filter","item","itemData","toUpperCase","textData","indexOf","updateChat","getchatText","status","alert","insertChatLog","getmenuChat","useEffect","countTimer","setInterval","manageTimer","clearInterval","selectChatLog","selectChatLogL","selectChatLogNew","searchchatlog","collection","where","get","then","querySnapshot","forEach","doc","ref","update","received","submitsearch","getsearchchat","onSend","useCallback","_id","createdAt","user","add","current","readUser","getshopcode","getchatName","unsubFromMessages","orderBy","onSnapshot","snapshot","docs","map","data","toDate","image","video","images","setImages","videos","setVideos","setUrls","setProgress","uploadImagePicked","geturls","msg","Math","random","toString","substring","Date","name","avatar","uploadVideosPicked","styles","styleNewChatBtn","lightTheme","round","searchIcon","size","onChangeText","onClear","placeholder","value","gap","SectionList","ItemSeparatorComponent","listItemSeparatorStyle","sections","renderItem","marginLeft","uri","displayimage","Img","Text","sectionListItemStyle","updateChatLog","sectionListItemStyle2","lasttime","textAlign","chatcolor","fontSize","borderRadius","chatcount","keyExtractor","index","window","confirm","showAvatarForEveryMessage","renderBubble","props","tickStyle","currentMessage","timeTextStyle","right","left","textStyle","wrapperStyle","quickReplyStyle","borderWidth","renderMessageVideo","position","Video","useNativeControls","shouldPlay","type","id","hidden","onChange","e","i","newImage","target","files","prevState","accept","for","onClick","date","getDate","month","getMonth","year","getFullYear","hours","getHours","min","getMinutes","sec","getSeconds","filename","promises","uploadTask","put","push","on","progress","bytesTransferred","totalBytes","log","child","getDownloadURL","urls","namechats","justifyContent","notiText","marginRight","paddingTop","paddingRight","paddingLeft","buttonNewChat","buttonchat","scroll","marginHorizontal","borderColor","overflow","marginBottom","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","HistoryScreen","modalVisible","setModalVisible","shopDisplayImage","setShopDisplayImage","shopTellText","setShopTellText","shopAddressText","setShopAddressText","setShopChatNameText","setShopMenu","filteredDataSource1","setFilteredDataSource1","masterDataSource1","setMasterDataSource1","filteredDataSource2","setFilteredDataSource2","masterDataSource2","setMasterDataSource2","filteredDataSource3","setFilteredDataSource3","masterDataSource3","setMasterDataSource3","filteredDataSource4","setFilteredDataSource4","masterDataSource4","setMasterDataSource4","filteredDataSource5","setFilteredDataSource5","masterDataSource5","setMasterDataSource5","filteredDataSource6","setFilteredDataSource6","masterDataSource6","setMasterDataSource6","filteredDataSource7","setFilteredDataSource7","masterDataSource7","setMasterDataSource7","setData","tell","address","getTable","axios","r","newData1","newData2","newData3","newData4","newData5","newData6","newData7","onPressChat","unsubscribe","username","dataTable","setDataTable","test2","groupname","renderSectionHeader","section","groupText","Modal","animationType","transparent","visible","onRequestClose","Alert","centeredView","modalView","renderInputToolbar","Pressable","buttonClose","Img2","DataTable","Header","Title","FlatList","Row","Cell","num","dateinsert","IconButton","icon","container2","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonOpen","fontWeight","modalText","NewChatScreen","searchByShopCode","setSearchByShopCode","hideShowChat","setHideShowChat","selectShopcode","displayname","mobileno","shop_name","insertShopcode","getchatname","TextInput","input","maxLength","checkShopcode","paddingBottom","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerTitleAlign","Screen","component","module","exports"],"mappings":"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","file":"static/js/app.747d87d3.chunk.js","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Image, Button } from 'react-native'\n\nconst MenuScreen = ({ navigation }) => {\n\n    return (\n\n        <View style={style.container}>\n            <Image\n                source={require(\"../assets/Pepsi-Logo.png\")}\n                resizeMode=\"contain\"\n                style={style.logo1}\n            ></Image>\n\n            <View style={[style.containerrow, {\n\n                flexDirection: \"row\"\n            }]}>\n\n\n                <Button title=\"Live Chat\" style={style.button}\n                    color={\"#EE0000\"}\n                    onPress={() => navigation.navigate('Chat')}\n                />\n\n                &nbsp; &nbsp; &nbsp; &nbsp;\n\n\n                <Button title=\"History\" style={style.button}\n                    color={\"#EE0000\"} width='250' height='100'\n                    onPress={() => navigation.navigate('History')}\n                />\n            </View>\n        </View>\n    )\n}\nexport default MenuScreen\nconst style = StyleSheet.create({\n    button: {\n        width: 250,\n        height: 100,\n        marginTop: 20\n    },\n    container: {\n        flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    containerrow: {\n        //  flex: 1,\n        backgroundColor: \"rgba(0,102,204,1)\",\n        alignItems: \"center\",\n        padding: 10\n    },\n    logo1: {\n        height: 150,\n        width: 220\n    },\n\n\n})","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDBCB00CkxHXwiAxqtj369EKv5M5OCgslc\",\n    authDomain: \"pepsi-coolerfan-chat-2d9ab.firebaseapp.com\",\n    databaseURL: \"gs://pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    projectId: \"pepsi-coolerfan-chat-2d9ab\",\n    storageBucket: \"pepsi-coolerfan-chat-2d9ab.appspot.com\",\n    messagingSenderId: \"967346529141\",\n    appId: \"1:967346529141:web:87311021ef0ced75a9e93c\"\n};\nlet app;\n\nif (firebase.apps.length === 0) {\n    app = firebase.initializeApp(firebaseConfig)\n} else {\n    app = firebase.app();\n}\n\nconst db = app.firestore();\nconst auth = firebase.auth();\nconst storage = firebase.storage();\n\nexport { db, auth, storage};\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { SafeAreaView, ScrollView, SectionList, StyleSheet, Text, View, Image, Button } from 'react-native';\nimport { db, storage } from '../firebase';\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport { SearchBar } from 'react-native-elements';\nimport { Video, Audio } from 'expo-av';\n\nconst ChatScreen = ({ navigation }) => {\n    const unsubFromMessagesRef = React.useRef();\n\n    const [messages, setMessages] = useState([]);\n    const [titleText, setTitleText] = useState(\"\");\n    const [shopCodeText, setShopCodeText] = useState(\"\");\n    const [shopNameText, setShopNameText] = useState(\"\");\n    const [chatText, setChatText] = useState(\"\");\n    const [menuText, setMenuText] = useState(\"\");\n\n    const [count, setCount] = useState(3);\n    const [searchchat, setSearchchat] = useState('unread');\n\n\n    var shopCode = ''\n    var chatName = ''\n    var menuChat = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\n    const [masterDataSource, setMasterDataSource] = useState([]);\n\n    const getUser = async () => {\n        setFilteredDataSource([])\n        setMasterDataSource([])\n        var Data = {\n            searchchat: searchchat,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/select_user_and_log_limit.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message != 'Not Complete') {  \n                setFilteredDataSource(json[0].Message);\n                setMasterDataSource(json[0].Message);\n                onPressTitle(json[0].Message[0].shopname, json[0].Message[0].shopcode, json[0].Message[0].chatname, json[0].Message[0].menu)\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            setCount(0)\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData = masterDataSource.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource(newData);\n            setSearch(text);\n        } else {\n            setCount(3)\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource(masterDataSource);\n            setSearch(text);\n        }\n    };\n\n    const updateChat = async (getchatText) => {\n        var Data = {\n            chatname: getchatText,\n            status: 'no'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/close_chat.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            alert(error)\n            console.error(error)\n        }\n    }\n\n    const insertChatLog = async (getchatText, getmenuChat) => {\n        // alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        var Data = {\n            shopcode: 'admin',\n            chatname: getchatText,\n            menu: getmenuChat,\n            status: 'unread'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/insert_chat_log_test.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n                //  getUser()\n            }\n            // alert(json[0].Message)\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        // selectChatLog()\n        const countTimer = setInterval(() => {\n            manageTimer();\n        }, 1000);\n        // and clear this timer when the component is unmounted\n        return function cleanup() {\n            clearInterval(countTimer);\n        };\n    });\n\n    const manageTimer = async () => {\n\n        if (count == 0) {\n\n        } else if (count == 1) {\n            selectChatLog()\n        } else {\n            setCount(count - 1)\n        }\n    }\n\n    const selectChatLog = async () => {\n        var Data = {\n            searchchat: searchchat,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/select_user_and_log_limit.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n          //  console.log('selectChatLog=== ', json[0].Message[0].shopname)\n            if (json[0].Message != 'Not Complete') {\n                setFilteredDataSource(json[0].Message);\n                setMasterDataSource(json[0].Message);\n                selectChatLogL()\n            } else{\n                setFilteredDataSource([]);\n                setMasterDataSource([]);\n            }\n           \n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n    }\n\n    const selectChatLogNew = async (searchchatlog) => {\n        var Data = {\n            searchchat: searchchatlog,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/select_user_and_log_limit.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message != 'Not Complete') {\n                setFilteredDataSource(json[0].Message);\n                setMasterDataSource(json[0].Message);\n                selectChatLogL()\n            } else {\n                setFilteredDataSource([]);\n                setMasterDataSource([]);\n            }\n\n        } catch (error) {\n            console.error(error)\n            setCount(3)\n        }\n    }\n\n    const selectChatLogL = async () => {\n        var Data = {\n            shopcode: shopCodeText,\n            chatname: chatText,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n\n            const cityRef = db.collection(chatText).where(\"user._id\", \"==\", shopCodeText)\n                .get()\n                .then(function (querySnapshot) {\n                    querySnapshot.forEach(function (doc) {\n                        doc.ref.update({ received: true })\n                    });\n                })\n\n            setCount(3)\n        } catch (error) {\n            setCount(3)\n            console.error(error)\n        }\n    }\n\n    const submit = async (getchatText) => {\n        const res = window.confirm(\"ยืนยันปิดการสนทนา \" + titleText);\n\n        if (res) {\n            // show your message success\n            updateChat(getchatText)\n        }\n    }\n\n    const submitsearch = async (getsearchchat) => {\n        setCount(0)\n        setSearchchat(getsearchchat)\n        selectChatLogNew(getsearchchat)\n    }\n\n\n    const onSend = useCallback((messages = [], getchatText, getmenuChat) => {\n        //alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        //  alert(\"chatText \" + chatText)\n        insertChatLog(getchatText, getmenuChat)\n        //   setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            received\n        } = messages[0]\n        db.collection(getchatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            received: false\n        })\n\n    }, [])\n\n    const updateChatLog = async (shopname, shopcode, chatname, menu) => {\n       // alert(shopcode + \" \" + chatname)\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n        onPressTitle(shopname, shopcode, chatname, menu)\n\n    }\n\n    const onPressTitle = (shopname, shopcode, chatname, menu) => {\n        chatName = chatname;\n        shopCode = shopcode;\n        menuChat = menu;\n        let getTitle = shopcode + ' (' + shopname + ')'\n\n        setTitleText(getTitle);\n        setChatText(chatName);\n        setShopCodeText(shopCode);\n        setShopNameText(shopname);\n        setMenuText(menuChat);\n        unsubFromMessagesRef.current && unsubFromMessagesRef.current();\n        readUser(shopcode, chatName)\n    };\n\n    const readUser = async (getshopcode, getchatName) => {\n        const cityRef = db.collection(getchatName).where(\"user._id\", \"==\", getshopcode)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    doc.ref.update({ received: true })\n                });\n            })\n\n        const unsubFromMessages = db.collection(getchatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => {\n            unsubFromMessagesRef.current = unsubFromMessages;\n            setMessages(\n                snapshot.docs.map(doc => ({\n                    _id: doc.data()._id,\n                    createdAt: doc.data().createdAt.toDate(),\n                    text: doc.data().text,\n                    user: doc.data().user,\n                    image: doc.data().image,\n                    video: doc.data().video,\n                    received: doc.data().received\n                }))\n            )\n        });\n\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n    const [images, setImages] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        setImages([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUpload = async () => {\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        const promises = [];\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadImagePicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const uploadImagePicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            image: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n\n    const handleChangevdo = (e) => {\n        setVideos([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setVideos((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUploadvdo = async () => {\n        const promises = [];\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        videos.map((image) => {\n            const uploadTask = storage.ref(`videos/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"videos\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadVideosPicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n            //  uploadImagePicked()\n        });\n\n        /*\n                Promise.all(promises)\n                    .then(() => )\n                    .catch((err) => console.log(err));\n                  */\n    };\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                />\n            </View>\n        );\n    };\n\n    const uploadVideosPicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            video: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                tickStyle={{\n                    color: props.currentMessage.received ? '#00FF00' : '#454545'\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n\n                }}\n                wrapperStyle={{\n                    right:\n                    {\n                        backgroundColor: 'rgba(0,102,204,1)',\n                        borderRadius: 15\n                    },\n                    left:\n                    {\n                        backgroundColor: 'rgb(255,255,255)',\n                        borderRadius: 15\n                    }\n                }}\n                quickReplyStyle={{\n                    color: 'rgba(0,102,204,1)',\n                    borderWidth: 2,\n                    borderRadius: 30,\n                    backgroundColor: 'rgb(255,255,255)'\n                }}\n\n            />\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"write\" }}>\n                <View style={styles.styleNewChatBtn}>\n                    <Button\n                        color=\"#0a7e07\" //button color\n                        onPress={() => navigation.navigate('LiveChat')}\n                        title=\"เริ่มการสนทนาใหม่\"\n                    />\n                </View>\n                \n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        padding: 10,\n                        gap: 5\n                    }}\n                >\n                    <View style={{ flex: 1 }}>\n                        <Button title=\"ยังไม่ได้อ่าน\" style={styles.button}\n                            color={\"#FF0000\"}\n                            onPress={() => \n                               submitsearch(\"unread\")\n                            }\n                        />\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <Button title=\"อ่านแล้ว\" style={styles.button}\n                            color={\"#006400\"}\n                            onPress={() => \n                                submitsearch(\"read\")\n                            }\n                        />\n                    </View>\n                </View>\n\n                <SectionList\n                    style={{ height: 100 }}\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { data: filteredDataSource },\n                    ]}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <View style={{ flexDirection: 'column'}}>\n                                <Text\n                                    style={styles.sectionListItemStyle}\n                                    //Item Separator View\n                                    onPress={() => updateChatLog(item.shopname, item.shopcode, item.chatname, item.menu)}>\n\n                                    {item.shopcode} ({item.shopname})\n                                </Text>\n                                <Text style={styles.sectionListItemStyle2}>\n                                   {item.lasttime}\n                                </Text>\n                            </View>\n                            \n                            <Text\n                                style={{\n                                    textAlign: 'center',\n                                    backgroundColor: item.chatcolor,\n                                    fontSize: 10,\n                                    padding: 5,\n                                    marginTop: 5,\n                                    color: '#fff',\n                                    height: 20,\n                                    width: 20,\n                                    borderRadius: 10\n                                }}>\n                                {item.chatcount}\n                            </Text>\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"lightgray\" }} >\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 40,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 3 }}>\n                        <Text style={styles.titleText}>{titleText}</Text>\n                    </View>\n                    <View style={{ backgroundColor: \"#0089FC\", flex: 0.5 }}>\n                        <Button title=\"ปิดการสนทนา\" style={styles.button}\n                            color={\"blue\"}\n                            onPress={() => submit(chatText)}\n                        />\n                    </View>\n                </View>\n                <GiftedChat\n                    messages={messages}\n                    showAvatarForEveryMessage={true}\n                    renderBubble={renderBubble}\n                    renderMessageVideo={renderMessageVideo}\n                    onSend={messages => onSend(messages, chatText, menuChat)}\n                    user={{\n                        _id: 'Admin',\n                        name: 'Admin',\n                        avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                    }}\n                />\n                <View\n                    style={{\n                        flexDirection: \"row\",\n                        height: 25,\n                        padding: 0\n                    }}\n                >\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div>\n                            <input type=\"file\" id=\"upload-file\" hidden onChange={handleChange} accept=\"image/*\" />\n                            <label for=\"upload-file\">เลือกรูปภาพ</label>\n                        </div>\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUpload}>ส่งรูป</button>\n                        </div>\n\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                        <div>\n                            <input type=\"file\" id=\"upload-file-video\" hidden onChange={handleChangevdo} accept=\"video/*\" />\n                            <label for=\"upload-file-video\">เลือกวิดีโอ</label>\n                        </div>\n\n                    </View>\n                    <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                        <div>\n                            <button onClick={handleUploadvdo}>ส่งวิดีโอ</button>\n                        </div>\n                    </View>\n                </View>\n\n            </View>\n        </View >\n    )\n}\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        paddingTop: 15,\n        paddingRight: 15,\n        paddingLeft: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    sectionListItemStyle2: {\n        fontSize: 8,\n        color: 'gray',\n        paddingLeft: 15,\n        paddingRight: 15,\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    buttonNewChat: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    buttonchat: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    scroll: {\n        flex: 1,\n        marginHorizontal: 16\n    },\n    styleNewChatBtn: {\n        marginTop: 10,\n        marginLeft: 60,\n        marginRight: 60,\n        borderWidth: 2,\n        borderRadius: 20,\n        borderColor: \"#056f00\", //button background/border color\n        overflow: \"hidden\",\n        marginBottom: 10,\n    },\n});","import React from 'react'\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (apiData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(apiData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <button onClick={(e) => exportToCSV(apiData, fileName)} style={{\n            backgroundColor: \"#145A32\", height: 40, borderRadius: 10, color: \"#ffffff\"\n        }}>Download Excel</button>\n    );\n};","import React, { useEffect, useState } from 'react'\nimport { SectionList, StyleSheet, Text, View, Image, Alert, Modal, Pressable } from 'react-native';\nimport { db } from '../firebase';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { FlatList } from 'react-native';\nimport { SearchBar } from 'react-native-elements';\nimport { DataTable, IconButton } from 'react-native-paper';\nimport { Video, Audio } from 'expo-av';\n\nimport axios from 'axios'\nimport { ExportToExcel } from './ExportToExcel'\n\nconst HistoryScreen = ({ navigation }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [messages, setMessages] = useState([]);\n\n    const [titleText, setTitleText] = useState(\"\")\n    const [shopDisplayImage, setShopDisplayImage] = useState(\"\")\n    const [shopCodeText, setShopCodeText] = useState(\"\")\n    const [shopNameText, setShopNameText] = useState(\"\")\n    const [shopTellText, setShopTellText] = useState(\"\")\n    const [shopAddressText, setShopAddressText] = useState(\"\")\n    const [shopChatNameText, setShopChatNameText] = useState(\"\")\n    const [shopMenu, setShopMenu] = useState(\"\")\n\n    var chatName = ''\n\n    const [search, setSearch] = useState('');\n    const [filteredDataSource1, setFilteredDataSource1] = useState([]);\n    const [masterDataSource1, setMasterDataSource1] = useState([]);\n    const [filteredDataSource2, setFilteredDataSource2] = useState([]);\n    const [masterDataSource2, setMasterDataSource2] = useState([]);\n    const [filteredDataSource3, setFilteredDataSource3] = useState([]);\n    const [masterDataSource3, setMasterDataSource3] = useState([]);\n    const [filteredDataSource4, setFilteredDataSource4] = useState([]);\n    const [masterDataSource4, setMasterDataSource4] = useState([]);\n    const [filteredDataSource5, setFilteredDataSource5] = useState([]);\n    const [masterDataSource5, setMasterDataSource5] = useState([]);\n    \n\n    const [filteredDataSource6, setFilteredDataSource6] = useState([]);\n    const [masterDataSource6, setMasterDataSource6] = useState([]);\n\n    const [filteredDataSource7, setFilteredDataSource7] = useState([]);\n    const [masterDataSource7, setMasterDataSource7] = useState([]);\n\n    const [data, setData] = useState([]);\n    const fileName = \"Export_Chat_Report\"; // here enter filename for your excel file\n\n\n\n\n    const getUser = async (menu) => {\n        var Data = {\n            menu: menu,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/select_user_menu.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n\n            const json = await response.json()\n\n            if (json[0].Message != 'Not Complete') {\n                if (menu == 'group1') {\n                    setFilteredDataSource1(json[0].Message);\n                    setMasterDataSource1(json[0].Message);\n                    onPressTitle(json[0].Message[0].displayimage, json[0].Message[0].shopname, json[0].Message[0].shopcode, json[0].Message[0].tell, json[0].Message[0].address, json[0].Message[0].chatname, json[0].Message[0].menu)\n                    getTable(json[0].shopcode)\n                } else if (menu == 'group2') {\n                    setFilteredDataSource2(json[0].Message);\n                    setMasterDataSource2(json[0].Message);\n                } else if (menu == 'group3') {\n                    setFilteredDataSource3(json[0].Message);\n                    setMasterDataSource3(json[0].Message);\n                } else if (menu == 'group4') {\n                    setFilteredDataSource4(json[0].Message);\n                    setMasterDataSource4(json[0].Message);\n                } else if (menu == 'group5') {\n                    setFilteredDataSource5(json[0].Message);\n                    setMasterDataSource5(json[0].Message);\n                } else if (menu == 'admin') {\n                    setFilteredDataSource7(json[0].Message);\n                    setMasterDataSource7(json[0].Message);\n                } else if (menu == '') {\n                    setFilteredDataSource6(json[0].Message);\n                    setMasterDataSource6(json[0].Message);\n                }\n            }\n\n            \n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    useEffect(() => {\n        getUser('group1')\n        getUser('group2')\n        getUser('group3')\n        getUser('group4')\n        getUser('group5')\n        getUser('admin')\n        getUser('')\n\n        const fetchData = () => {\n            axios.get('https://school.treesbot.com/pepsichat_test/export_chat_all.php').then(r => setData(r.data))\n        }\n        fetchData()\n    }, [])\n\n    const searchFilterFunction = (text) => {\n        // Check if searched text is not blank\n        if (text) {\n            // Inserted text is not blank\n            // Filter the masterDataSource\n            // Update FilteredDataSource\n            const newData1 = masterDataSource1.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData2 = masterDataSource2.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData3 = masterDataSource3.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData4 = masterDataSource4.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData5 = masterDataSource5.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData6 = masterDataSource6.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            const newData7 = masterDataSource7.filter(function (item) {\n                const itemData = item.shopcode\n                    ? item.shopcode.toUpperCase()\n                    : ''.toUpperCase();\n                const textData = text.toUpperCase();\n                return itemData.indexOf(textData) > -1;\n            });\n            setFilteredDataSource1(newData1);\n            setFilteredDataSource2(newData2);\n            setFilteredDataSource3(newData3);\n            setFilteredDataSource4(newData4);\n            setFilteredDataSource5(newData5);\n            setFilteredDataSource6(newData6);\n            setFilteredDataSource6(newData7);\n            setSearch(text);\n        } else {\n            // Inserted text is blank\n            // Update FilteredDataSource with masterDataSource\n            setFilteredDataSource1(masterDataSource1);\n            setFilteredDataSource2(masterDataSource2);\n            setFilteredDataSource3(masterDataSource3);\n            setFilteredDataSource4(masterDataSource4);\n            setFilteredDataSource5(masterDataSource5);\n            setFilteredDataSource6(masterDataSource6);\n            setFilteredDataSource7(masterDataSource7);\n\n            setSearch(text);\n        }\n    };\n\n    const onPressChat = (chatname) => {\n        chatName = chatname\n        setModalVisible(true)\n        readUser()\n    };\n\n    async function readUser() {\n        const unsubscribe = db.collection(chatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.data()._id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                image: doc.data().image,\n                video: doc.data().video\n\n            }))\n        ))\n        return () => unsubscribe;\n    }\n\n    const FlatListItemSeparator = () => {\n        return (\n            //Item Separator\n            <View style={styles.listItemSeparatorStyle} />\n        );\n    };\n\n    const onPressTitle = (displayimage, username, shopcode, tell, address, chatname, menu) => {\n        chatName = chatname\n        let getTitle = shopcode + ' (' + username + ')'\n\n        setTitleText(getTitle);\n        setShopDisplayImage(displayimage)\n        setShopNameText(username);\n        setShopCodeText(shopcode);\n        setShopTellText(tell);\n        setShopAddressText(address);\n        setShopChatNameText(chatname);\n        setShopMenu(menu);\n\n        getTable(shopcode);\n    };\n\n    const [dataTable, setDataTable] = useState([]);\n\n    const getTable = async (shopcode) => {\n        var Data = {\n            shopcode: shopcode,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/select_user_shopcode.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message != 'Not Complete') {\n                setDataTable(json[0].Message);\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const test2 = (menu) => {\n        var groupname = ''\n        if (menu == 'group1') {\n            groupname = 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่'\n        } else if (menu == 'group2') {\n            groupname = 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล'\n        } else if (menu == 'group3') {\n            groupname = 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ'\n        } else if (menu == 'group4') {\n            groupname = 'สอบถามรายละเอียดทั่วไป'\n        } else if (menu == 'group5') {\n            groupname = 'แอด LINE เป๊ปซี่แฟนคลับ'\n        } else if (menu == 'admin') {\n            groupname = 'แอดมิดเริ่มสนทนา'\n        } else if (menu == '') {\n            groupname = 'ไม่ได้เลือกหัวข้อสนทนา'\n        }\n        return groupname\n    }\n    const _renderItem = ({ item }) => (\n        <DataTable.Row>\n            <DataTable.Cell style={{ flex: 1 }}>{item.num}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 2 }}>{item.dateinsert}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 3 }}>{test2(item.menu)}</DataTable.Cell>\n            <DataTable.Cell style={{ flex: 1 }}><IconButton\n                icon=\"eye\"\n                color={'blue'}\n                size={20}\n                onPress={() => onPressChat(item.chatname)}\n            />\n            </DataTable.Cell>\n\n        </DataTable.Row>\n    );\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                    style={styles.video}\n                />\n            </View>\n        );\n    };\n\n    return (\n\n        <View style={[styles.container, {\n            // Try setting `flexDirection` to `\"row\"`.\n            flexDirection: \"row\"\n        }]}>\n            <View style={{ flex: 1, backgroundColor: \"white\" }}>\n                <ExportToExcel apiData={data} fileName={fileName} />\n                <SearchBar\n                    lightTheme\n                    round\n                    searchIcon={{ size: 24 }}\n                    onChangeText={(text) => searchFilterFunction(text)}\n                    onClear={(text) => searchFilterFunction('')}\n                    placeholder=\"ค้นหาจากรหัสร้านค้า...\"\n                    value={search}\n                />\n\n                <SectionList\n                    style={{ height: 100 }}\n                    ItemSeparatorComponent={FlatListItemSeparator}\n                    sections={[\n                        { title: 'แจ้งปัญหาจากกิจกรรมถ่ายรูปตู้แช่', data: filteredDataSource1 },\n                        { title: 'สอบถาม, ติดตาม หรือแจ้งปัญหาการแลกของรางวัล', data: filteredDataSource2 },\n                        { title: 'สอบถามหรือแจ้งปัญหาการใช้งานแอพพลิเคชั่นด้านอื่นๆ', data: filteredDataSource3 },\n                        { title: 'สอบถามรายละเอียดทั่วไป', data: filteredDataSource4 },\n                        { title: 'แอด LINE เป๊ปซี่แฟนคลับ', data: filteredDataSource5 },\n                        { title: 'ไม่ได้เลือกหัวข้อสนทนา', data: filteredDataSource6 },\n                        { title: 'แอดมินเริ่มสนทนา', data: filteredDataSource7 },\n\n                    ]}\n                    renderSectionHeader={({ section }) => (\n                        <Text style={styles.groupText}> {section.title} </Text>\n                    )}\n                    renderItem={({ item }) => (\n                        // Single Comes here which will be repeatative for the FlatListItems\n                        <View style={{ flex: 1, flexDirection: 'row', marginLeft: 20 }}>\n                            <Image\n                                source={{ uri: item.displayimage }}\n                                style={styles.Img}\n                            />\n                            <Text\n                                style={styles.sectionListItemStyle}\n                                //Item Separator View\n                                onPress={() => onPressTitle(item.displayimage, item.shopname, item.shopcode, item.tell, item.address, item.chatname, item.menu)}>\n\n                                {item.shopcode} ({item.shopname})\n                            </Text>\n\n                        </View>\n                    )}\n                    keyExtractor={(item, index) => index}\n                />\n            </View>\n            <View style={{ flex: 2, backgroundColor: \"#0089FC\" }} >\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        Alert.alert(\"Modal has been closed.\");\n                        setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <GiftedChat\n                                messages={messages}\n                                showAvatarForEveryMessage={true}\n                                renderMessageVideo={renderMessageVideo}\n                                user={{\n                                    _id: 'Admin',\n                                    name: 'Admin',\n                                    avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                                }}\n                                renderInputToolbar={() => { return null }}\n                            />\n                            <Pressable\n                                style={[styles.button, styles.buttonClose]}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>ปิด</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </Modal>\n                <View\n                    style={{\n                        backgroundColor: \"white\",\n                        flexDirection: \"row\",\n                        height: 150,\n                        padding: 0,\n                        borderRadius: 20,\n                        marginTop: 20,\n                        marginLeft: 20,\n                        marginRight: 20\n                    }}\n                >\n                    <View style={{ flex: 1 }}>\n                        <Image\n                            source={{ uri: shopDisplayImage }}\n                            style={styles.Img2}\n                        />\n                    </View>\n                    <View style={{ flex: 2 }}>\n                        <Text style={styles.titleText}><b>{titleText}</b></Text>\n                        <Text style={styles.titleText}>รหัสร้านค้า : {shopCodeText}</Text>\n                        <Text style={styles.titleText}>เบอร์โทรติดต่อ : {shopTellText}</Text>\n                        <Text style={styles.titleText}>ที่อยู่ : {shopAddressText}</Text>\n                    </View>\n                </View>\n                <View style={{\n                    backgroundColor: \"white\",\n                    flexDirection: \"row\",\n                    borderRadius: 20,\n                    marginTop: 10,\n                    marginLeft: 20,\n                    marginRight: 20,\n                    marginBottom: 10\n                }}>\n                    <DataTable>\n                        <DataTable.Header>\n                            <DataTable.Title style={{ flex: 1 }}>No</DataTable.Title>\n                            <DataTable.Title style={{ flex: 2 }}>Date</DataTable.Title>\n                            <DataTable.Title style={{ flex: 3 }}>Message</DataTable.Title>\n                            <DataTable.Title style={{ flex: 1 }}>Action</DataTable.Title>\n\n                        </DataTable.Header>\n\n                        <FlatList data={dataTable} renderItem={_renderItem} />\n                    </DataTable>\n                </View>\n            </View>\n        </View >\n\n    )\n}\nexport default HistoryScreen\n\nconst styles = StyleSheet.create({\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    Img2: {\n        marginTop: 25,\n        marginLeft: 50,\n        height: 100,\n        width: 100,\n        borderRadius: 75\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'white',\n    },\n    container2: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        height: 400,\n        width: 600\n    },\n    groupText: {\n        backgroundColor: 'gray',\n        fontSize: 18,\n        padding: 5,\n        color: 'white',\n    },\n    titleText: {\n        fontSize: 16,\n        padding: 5,\n        color: 'black',\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        padding: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        flex: 1,\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        width: 500,\n        height: 500,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n});","import React, { useEffect, useState, useCallback } from 'react'\nimport { SafeAreaView, ScrollView, SectionList, StyleSheet, Text, View, Image, Button, TextInput } from 'react-native';\nimport { db, storage } from '../firebase';\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport { SearchBar } from 'react-native-elements';\nimport { Video, Audio } from 'expo-av';\n\nconst NewChatScreen = ({ navigation }) => {\n\n    const [searchByShopCode, setSearchByShopCode] = React.useState('');\n    const [hideShowChat, setHideShowChat] = useState(\"hide\");\n\n\n    const unsubFromMessagesRef = React.useRef();\n\n    const [messages, setMessages] = useState([]);\n    const [titleText, setTitleText] = useState(\"\");\n    const [shopCodeText, setShopCodeText] = useState(\"\");\n    const [shopNameText, setShopNameText] = useState(\"\");\n    const [chatText, setChatText] = useState(\"\");\n    const [menuText, setMenuText] = useState(\"\");\n\n\n    var shopCode = ''\n    var chatName = ''\n    var menuChat = ''\n\n    const insertChatLog = async (getchatText, getmenuChat) => {\n        // alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        var Data = {\n            shopcode: 'admin',\n            chatname: getchatText,\n            menu: getmenuChat,\n            status: 'unread'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/insert_chat_log_test.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message == 'Complete') {\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const onSend = useCallback((messages = [], getchatText, getmenuChat) => {\n        //alert(\"chatName\" + chatName + '  shopCode ' + shopCode + ' menu ' + menuChat)\n        //  alert(\"chatText \" + chatText)\n        insertChatLog(getchatText, getmenuChat)\n        //   setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            received\n        } = messages[0]\n        db.collection(getchatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            received: false\n        })\n\n    }, [])\n\n    const updateChatLog = async (shopname, shopcode, chatname, menu) => {\n        var Data = {\n            shopcode: shopcode,\n            chatname: chatname,\n            status: 'read'\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/update_chat_log_web.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n        } catch (error) {\n            //   alert(error)\n            console.error(error)\n        }\n        onPressTitle(shopname, shopcode, chatname, menu)\n\n    }\n\n    const onPressTitle = (shopname, shopcode, chatname, menu) => {\n        chatName = chatname;\n        shopCode = shopcode;\n        menuChat = menu;\n        let getTitle = shopcode + ' (' + shopname + ')'\n\n        setTitleText(getTitle);\n        setChatText(chatName);\n        setShopCodeText(shopCode);\n        setShopNameText(shopname);\n        setMenuText(menuChat);\n        unsubFromMessagesRef.current && unsubFromMessagesRef.current();\n        readUser(shopcode, chatName)\n    };\n\n    const readUser = async (getshopcode, getchatName) => {\n        const cityRef = db.collection(getchatName).where(\"user._id\", \"==\", getshopcode)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    doc.ref.update({ received: true })\n                });\n            })\n\n        const unsubFromMessages = db.collection(getchatName).orderBy('createdAt', 'desc').onSnapshot(snapshot => {\n            unsubFromMessagesRef.current = unsubFromMessages;\n            setMessages(\n                snapshot.docs.map(doc => ({\n                    _id: doc.data()._id,\n                    createdAt: doc.data().createdAt.toDate(),\n                    text: doc.data().text,\n                    user: doc.data().user,\n                    image: doc.data().image,\n                    video: doc.data().video,\n                    received: doc.data().received\n                }))\n            )\n        });\n\n    }\n\n    const [images, setImages] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n\n    const handleChange = (e) => {\n        setImages([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUpload = async () => {\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        const promises = [];\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadImagePicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n        });\n\n    };\n\n    const uploadImagePicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            image: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            image,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n\n    const handleChangevdo = (e) => {\n        setVideos([]);\n        setUrls([]);\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i];\n            newImage[\"id\"] = Math.random();\n\n            setVideos((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    const handleUploadvdo = async () => {\n        const promises = [];\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        const filename = 'admin_' + year + month + date + hours + min + sec\n\n        videos.map((image) => {\n            const uploadTask = storage.ref(`videos/${filename}`).put(image);\n\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"videos\")\n                        .child(filename)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            uploadVideosPicked(urls)\n                            setUrls((prevState) => [...prevState, urls]);\n                        });\n                }\n            );\n        });\n    };\n\n    const renderMessageVideo = (props) => {\n        const { currentMessage } = props;\n        return (\n            <View style={{ position: 'relative', height: 150, width: 250 }}>\n                <Video\n                    resizeMode=\"cover\"\n                    height={150}\n                    width={250}\n                    useNativeControls\n                    shouldPlay={false}\n                    source={{ uri: currentMessage.video }}\n                />\n            </View>\n        );\n    };\n\n    const uploadVideosPicked = (geturls) => {\n        const randomid = Math.random().toString(36).substring(7)\n        let msg = {\n            _id: randomid,\n            text: '',\n            createdAt: new Date(),\n            user: {\n                _id: 'Admin',\n                name: 'Admin',\n                avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n            },\n            video: geturls\n        }\n\n        const {\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received\n        } = [msg][0]\n        db.collection(chatText).add({\n            _id,\n            createdAt,\n            text,\n            user,\n            video,\n            received: false\n        })\n        insertChatLog(chatText, menuText)\n\n    }\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                tickStyle={{\n                    color: props.currentMessage.received ? '#00FF00' : '#454545'\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: 'rgb(255,255,255)'\n                    },\n                    left: {\n                        color: 'rgb(0,0,0)'\n                    },\n\n                }}\n                wrapperStyle={{\n                    right:\n                    {\n                        backgroundColor: 'rgba(0,102,204,1)',\n                        borderRadius: 15\n                    },\n                    left:\n                    {\n                        backgroundColor: 'rgb(255,255,255)',\n                        borderRadius: 15\n                    }\n                }}\n                quickReplyStyle={{\n                    color: 'rgba(0,102,204,1)',\n                    borderWidth: 2,\n                    borderRadius: 30,\n                    backgroundColor: 'rgb(255,255,255)'\n                }}\n\n            />\n        );\n    };\n\n    const checkShopcode = async () => {\n        console.log('checkShopcode shopcode =====', searchByShopCode)\n\n        if (searchByShopCode == '' || searchByShopCode.length != 10) {\n            setHideShowChat(\"hide\")\n            window.confirm(\"กรุณากรอกรหัสร้านค้าให้ครบ 10 หลัก\");\n        } else {\n            var Data = {\n                shopcode: searchByShopCode,\n            };\n            try {\n                const response = await fetch('https://school.treesbot.com/pepsichat_test/newchat_check_shopcode.php', {\n                    method: 'POST',\n                    body: JSON.stringify(Data)\n                })\n                const json = await response.json()\n                if (json.status) {\n                    console.log('checkShopcode === ', json)\n                    selectShopcode(json.displayname, json.displayimage, json.mobileno, json.shopcode, json.shop_name, json.address)\n                } else {\n                    console.log('checkShopcode === error', json)\n                    setHideShowChat(\"hide\")\n                    window.confirm(\"ไม่พบข้อมูลการลงทะเบียนใช้งานแอปเป๊ปซี่แฟนคลับของร้าน \" + searchByShopCode + \" ไม่สามารถเริ่มการสนทนาได้\");\n                }\n\n\n            } catch (error) {\n                setHideShowChat(\"hide\")\n                console.error(error)\n            }\n        }\n\n    }\n\n    const selectShopcode = async (displayname, displayimage, mobileno, shopcode, shop_name, address) => {\n        var Data = {\n            shopcode: shopcode,\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/newchat_select_shopcode.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            if (json[0].Message != 'Not Complete') {\n                //open chat\n                console.log('selectShopcode === ', json)\n                setHideShowChat(\"show\")\n                updateChatLog(json[0].Message[0].shopname, json[0].Message[0].shopcode, json[0].Message[0].chatname, json[0].Message[0].menu)\n            } else {\n                //new chat\n                insertShopcode(displayname, displayimage, mobileno, shopcode, shop_name, address)\n            }\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const insertShopcode = async (displayname, displayimage, mobileno, shopcode, shop_name, address) => {\n\n        var date = new Date().getDate(); //Current Date\n        var month = new Date().getMonth() + 1; //Current Month\n        var year = new Date().getFullYear(); //Current Year\n        var hours = new Date().getHours(); //Current Hours\n        var min = new Date().getMinutes(); //Current Minutes\n        var sec = new Date().getSeconds(); //Current Seconds\n\n        var getchatname = shopcode + '_' + year + month + date + hours + min + sec\n        var menu = 'admin'\n        var status = 'yes'\n\n        var Data = {\n            shopcode: shopcode,\n            displayname: displayname,\n            displayimage: displayimage,\n            shopname: shop_name,\n            address: address,\n            tell: mobileno,\n            chatname: getchatname,\n            menu: menu,\n            status: status\n        };\n        try {\n            const response = await fetch('https://school.treesbot.com/pepsichat_test/newchat_insert_shop.php', {\n                method: 'POST',\n                body: JSON.stringify(Data)\n            })\n            const json = await response.json()\n            console.log('insert_user === ', json)\n            \n            if (json[0].Message == 'Complete') {\n                setHideShowChat(\"show\")\n                updateChatLog(shop_name, shopcode, getchatname, menu)\n            } else if (json[0].Message == 'Error'){\n                window.confirm( \"เริ่มการสนทนาไม่สำเร็จ \\n กรุณาลองใหม่อีกครั้ง\");\n            }else{\n                updateChatLog(json[0].Message.shopname, json[0].Message.shopcode, json[0].Message.chatname, json[0].Message.menu)\n            }\n        } catch (error) {\n            console.error(error)\n        }\n            \n    }\n\n    return (\n        <View style={[styles.container, {\n            flexDirection: \"column\",\n            height: '100%'\n        }]}>\n            <View style={{\n                justifyContent: 'center',\n                backgroundColor: 'white',\n                height: 60,\n                flexDirection: \"row\",\n                marginTop: 0\n            }}>\n                <TextInput\n                    style={styles.input}\n                    //    onChangeText={setSearchByShopCode}\n                    onChangeText={(text) => setSearchByShopCode(text.toUpperCase())}\n                    maxLength={10}\n                    value={searchByShopCode}\n                    placeholder=\"กรอกรหัสร้านค้า\"\n                />\n                <View style={styles.styleNewChatBtn}>\n                    <Button\n                        color=\"#0a7e07\" //button color\n                        onPress={() =>\n                            checkShopcode()\n                        }\n                        title=\"ค้นหา\"\n                    />\n                </View>\n\n            </View >\n\n            {hideShowChat == 'hide' ?\n                <View style={{\n                    backgroundColor: 'white',\n                    flex: 1,\n                }} >\n\n                </View>\n                :\n                <View style={{\n                    backgroundColor: 'lightgray',\n                    flex: 1,\n                    marginTop: 0,\n                    marginBottom: 20,\n                    marginLeft: 100,\n                    marginRight: 100,\n                    borderWidth: 2,\n                    borderRadius: 10,\n                    borderColor: '#0089FC',\n\n                }} >\n                    <View\n                        style={{\n                            flexDirection: \"row\",\n                            height: 40,\n                            paddingLeft: 20,\n                            paddingRight: 20,\n                            paddingTop: 0,\n                            paddingBottom: 0,\n                            borderWidth: 2,\n                            borderRadius: 5,\n                            borderColor: '#0089FC',\n                            backgroundColor: '#0089FC',\n                        }}\n                    >\n                        <View style={{ flex: 1 }}>\n                            <Text style={styles.titleText}>{titleText}</Text>\n                        </View>\n                    </View>\n\n                    <GiftedChat\n                        messages={messages}\n                        showAvatarForEveryMessage={true}\n                        renderBubble={renderBubble}\n                        renderMessageVideo={renderMessageVideo}\n                        onSend={messages => onSend(messages, chatText, menuChat)}\n                        user={{\n                            _id: 'Admin',\n                            name: 'Admin',\n                            avatar: 'https://static-s.aa-cdn.net/img/gp/20600014266053/JVWGO91AFGOSfDoqO3V_YlUiWnCoiyob0aPkVOss0qASb26aRbXvWiiNK12ZFLxfsSw=s300?v=1'\n                        }}\n                    />\n                    <View\n                        style={{\n                            flexDirection: \"row\",\n                            height: 25,\n                            marginBottom: 10,\n                        }}\n                    >\n                        <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                            <div>\n                                <input type=\"file\" id=\"upload-file\" hidden onChange={handleChange} accept=\"image/*\" />\n                                <label for=\"upload-file\">เลือกรูปภาพ</label>\n                            </div>\n                        </View>\n                        <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                            <div>\n                                <button onClick={handleUpload}>ส่งรูป</button>\n                            </div>\n\n                        </View>\n                        <View style={{ backgroundColor: \"lightgray\", flex: 2 }}>\n                            <div>\n                                <input type=\"file\" id=\"upload-file-video\" hidden onChange={handleChangevdo} accept=\"video/*\" />\n                                <label for=\"upload-file-video\">เลือกวิดีโอ</label>\n                            </div>\n\n                        </View>\n                        <View style={{ backgroundColor: \"lightgray\", flex: 0.5 }}>\n                            <div>\n                                <button onClick={handleUploadvdo}>ส่งวิดีโอ</button>\n                            </div>\n                        </View>\n                    </View>\n                </View>\n            }\n        </View>\n\n    )\n}\nexport default NewChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n    },\n    input: {\n        height: 40,\n        width: 200,\n        marginLeft: 40,\n        marginTop: 10,\n        marginBottom: 10,\n        borderWidth: 1,\n        borderRadius: 10,\n        borderColor: 'darkgray',\n        padding: 10\n    },\n    styleNewChatBtn: {\n        width: 80,\n        height: 39,\n        marginTop: 10,\n        marginBottom: 10,\n        marginLeft: 10,\n        borderWidth: 2,\n        borderRadius: 20,\n        borderColor: \"#056f00\", //button background/border color\n        overflow: \"hidden\",\n    },\n    Img: {\n        height: 50,\n        width: 50,\n        borderRadius: 25\n    },\n    namechats: {\n        /// flex: 1,\n        // justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#0089FC',\n        height: 40\n    },\n    titleText: {\n        textAlign: 'center',\n        backgroundColor: '#0089FC',\n        fontSize: 20,\n        padding: 5,\n        color: '#fff',\n        height: 40\n\n    },\n    notiText: {\n        textAlign: 'center',\n        backgroundColor: 'red',\n        fontSize: 10,\n        padding: 5,\n        marginTop: 5,\n        marginRight: 5,\n        color: '#fff',\n        height: 20,\n        width: 20,\n        borderRadius: 10\n    },\n    sectionListItemStyle: {\n        fontSize: 15,\n        paddingTop: 15,\n        paddingRight: 15,\n        paddingLeft: 15,\n        color: '#000',\n        backgroundColor: 'white',\n    },\n    sectionListItemStyle2: {\n        fontSize: 8,\n        color: 'gray',\n        paddingLeft: 15,\n        paddingRight: 15,\n        backgroundColor: 'white',\n    },\n    listItemSeparatorStyle: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8',\n    },\n    buttonNewChat: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    button: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    buttonchat: {\n        justifyContent: 'center',\n        width: 250,\n        height: 40,\n        borderRadius: 10\n    },\n    scroll: {\n        flex: 1,\n        marginHorizontal: 16\n    },\n});","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport MenuScreen from './screens/MenuScreen';\nimport ChatScreen from './screens/ChatScreen';\nimport HistoryScreen from './screens/HistoryScreen';\nimport NewChatScreen from './screens/NewChatScreen';\n\nconst Stack = createStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerTitleAlign: 'center' }}>\n        <Stack.Screen name='Menu' component={MenuScreen} />\n        <Stack.Screen name='Chat' component={ChatScreen} />\n        <Stack.Screen name='History' component={HistoryScreen} />\n        <Stack.Screen name='LiveChat' component={NewChatScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/Pepsi-Logo.32560c85.png\";"],"sourceRoot":""}